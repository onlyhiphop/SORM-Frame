SORM: 一个自己实现的简单的orm框架

核心架构：
	Query接口：负责查询（对外提供服务的核心类）
	QueryFactory类：负责根据配置信息创建query对象
	TypeConvertor接口：负责类型转换
	TableContext类：
		负责获取管理数据库所有表结构和类结构的关系，并可以根据表结构生成类结构。
	DBManager类：
		根据配置信息，维持连接对象的管理（增加连接池功能）
	工具类：
		JDBCUtils：封装常用的JDBC操作		StringUtils：封装常用字符串操作
		JavaFileUtils：封装java文件操作	ReflectUtils：封装常用的反射操作
	
核心Bean，封装相关数据：
	ColumnInfo：封装表中一个字段的信息（字段类型、字段名、键类型）
	Configuration：封装配置文件信息
	TableInfo：封装一张表的信息
	

连接池（Connection Pool）
- 就是将Connection对象放入List中，反复重用！
- 连接池的初始化： 事先放入多个连接对象。
- 从连接池中取连接对象
	如果池中有可用连接，则将池中最后一个返回，同时，将该连接从池中remove，表示正在使用。
	如果池中无可用连接，则创建一个新的。
-关闭连接：不是真正的关闭连接，而是将用完的连接放入池中。

DBCP、C3P0、proxool
	
	
针对SORM框架的说明：
	核心思想：使用简单、性能高、极易上手
	配置文件：目前使用功能资源文件、后期项目复杂后可以增加XML文件配置和注解。
	类名由表名生成，只有首字符大写有区别，其他无区别
	java对象的属性由表中字段生成、完全对应。
	目前，只支持表中只有一个主键，联合主键不支持。
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	